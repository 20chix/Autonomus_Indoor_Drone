//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the lsd_slam_core package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __lsd_slam_core__LSDDEBUGPARAMSCONFIG_H__
#define __lsd_slam_core__LSDDEBUGPARAMSCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace lsd_slam_core
{
  class LSDDebugParamsConfigStatics;

  class LSDDebugParamsConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(LSDDebugParamsConfig &config, const LSDDebugParamsConfig &max, const LSDDebugParamsConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const LSDDebugParamsConfig &config1, const LSDDebugParamsConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, LSDDebugParamsConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const LSDDebugParamsConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, LSDDebugParamsConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const LSDDebugParamsConfig &config) const = 0;
      virtual void getValue(const LSDDebugParamsConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T LSDDebugParamsConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (LSDDebugParamsConfig::* field);

      virtual void clamp(LSDDebugParamsConfig &config, const LSDDebugParamsConfig &max, const LSDDebugParamsConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const LSDDebugParamsConfig &config1, const LSDDebugParamsConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, LSDDebugParamsConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const LSDDebugParamsConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, LSDDebugParamsConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const LSDDebugParamsConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const LSDDebugParamsConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, LSDDebugParamsConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, LSDDebugParamsConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<LSDDebugParamsConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(LSDDebugParamsConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("plotStereoImages"==(*_i)->name){plotStereoImages = boost::any_cast<bool>(val);}
        if("plotTracking"==(*_i)->name){plotTracking = boost::any_cast<bool>(val);}
        if("freeDebugParam1"==(*_i)->name){freeDebugParam1 = boost::any_cast<double>(val);}
        if("freeDebugParam2"==(*_i)->name){freeDebugParam2 = boost::any_cast<double>(val);}
        if("freeDebugParam3"==(*_i)->name){freeDebugParam3 = boost::any_cast<double>(val);}
        if("freeDebugParam4"==(*_i)->name){freeDebugParam4 = boost::any_cast<double>(val);}
        if("freeDebugParam5"==(*_i)->name){freeDebugParam5 = boost::any_cast<double>(val);}
        if("plotTrackingIterationInfo"==(*_i)->name){plotTrackingIterationInfo = boost::any_cast<bool>(val);}
        if("printPropagationStatistics"==(*_i)->name){printPropagationStatistics = boost::any_cast<bool>(val);}
        if("printFillHolesStatistics"==(*_i)->name){printFillHolesStatistics = boost::any_cast<bool>(val);}
        if("printObserveStatistics"==(*_i)->name){printObserveStatistics = boost::any_cast<bool>(val);}
        if("printObservePurgeStatistics"==(*_i)->name){printObservePurgeStatistics = boost::any_cast<bool>(val);}
        if("printRegularizeStatistics"==(*_i)->name){printRegularizeStatistics = boost::any_cast<bool>(val);}
        if("printLineStereoStatistics"==(*_i)->name){printLineStereoStatistics = boost::any_cast<bool>(val);}
        if("printLineStereoFails"==(*_i)->name){printLineStereoFails = boost::any_cast<bool>(val);}
        if("printFrameBuildDebugInfo"==(*_i)->name){printFrameBuildDebugInfo = boost::any_cast<bool>(val);}
        if("printMemoryDebugInfo"==(*_i)->name){printMemoryDebugInfo = boost::any_cast<bool>(val);}
        if("printTrackingIterationInfo"==(*_i)->name){printTrackingIterationInfo = boost::any_cast<bool>(val);}
        if("printThreadingInfo"==(*_i)->name){printThreadingInfo = boost::any_cast<bool>(val);}
        if("printMappingTiming"==(*_i)->name){printMappingTiming = boost::any_cast<bool>(val);}
        if("printOverallTiming"==(*_i)->name){printOverallTiming = boost::any_cast<bool>(val);}
        if("printKeyframeSelectionInfo"==(*_i)->name){printKeyframeSelectionInfo = boost::any_cast<bool>(val);}
        if("printConstraintSearchInfo"==(*_i)->name){printConstraintSearchInfo = boost::any_cast<bool>(val);}
        if("printOptimizationInfo"==(*_i)->name){printOptimizationInfo = boost::any_cast<bool>(val);}
        if("printRelocalizationInfo"==(*_i)->name){printRelocalizationInfo = boost::any_cast<bool>(val);}
        if("continuousPCOutput"==(*_i)->name){continuousPCOutput = boost::any_cast<bool>(val);}
        if("saveKeyframes"==(*_i)->name){saveKeyframes = boost::any_cast<bool>(val);}
        if("saveAllTracked"==(*_i)->name){saveAllTracked = boost::any_cast<bool>(val);}
        if("saveLoopClosureImages"==(*_i)->name){saveLoopClosureImages = boost::any_cast<bool>(val);}
        if("saveAllTrackingStages"==(*_i)->name){saveAllTrackingStages = boost::any_cast<bool>(val);}
      }
    }

    bool plotStereoImages;
bool plotTracking;
double freeDebugParam1;
double freeDebugParam2;
double freeDebugParam3;
double freeDebugParam4;
double freeDebugParam5;
bool plotTrackingIterationInfo;
bool printPropagationStatistics;
bool printFillHolesStatistics;
bool printObserveStatistics;
bool printObservePurgeStatistics;
bool printRegularizeStatistics;
bool printLineStereoStatistics;
bool printLineStereoFails;
bool printFrameBuildDebugInfo;
bool printMemoryDebugInfo;
bool printTrackingIterationInfo;
bool printThreadingInfo;
bool printMappingTiming;
bool printOverallTiming;
bool printKeyframeSelectionInfo;
bool printConstraintSearchInfo;
bool printOptimizationInfo;
bool printRelocalizationInfo;
bool continuousPCOutput;
bool saveKeyframes;
bool saveAllTracked;
bool saveLoopClosureImages;
bool saveAllTrackingStages;

    bool state;
    std::string name;

    
}groups;



//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool plotStereoImages;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool plotTracking;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double freeDebugParam1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double freeDebugParam2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double freeDebugParam3;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double freeDebugParam4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double freeDebugParam5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool plotTrackingIterationInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printPropagationStatistics;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printFillHolesStatistics;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printObserveStatistics;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printObservePurgeStatistics;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printRegularizeStatistics;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printLineStereoStatistics;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printLineStereoFails;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printFrameBuildDebugInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printMemoryDebugInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printTrackingIterationInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printThreadingInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printMappingTiming;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printOverallTiming;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printKeyframeSelectionInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printConstraintSearchInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printOptimizationInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool printRelocalizationInfo;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool continuousPCOutput;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool saveKeyframes;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool saveAllTracked;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool saveLoopClosureImages;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool saveAllTrackingStages;
//#line 228 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("LSDDebugParamsConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const LSDDebugParamsConfig &__max__ = __getMax__();
      const LSDDebugParamsConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const LSDDebugParamsConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const LSDDebugParamsConfig &__getDefault__();
    static const LSDDebugParamsConfig &__getMax__();
    static const LSDDebugParamsConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const LSDDebugParamsConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void LSDDebugParamsConfig::ParamDescription<std::string>::clamp(LSDDebugParamsConfig &config, const LSDDebugParamsConfig &max, const LSDDebugParamsConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class LSDDebugParamsConfigStatics
  {
    friend class LSDDebugParamsConfig;

    LSDDebugParamsConfigStatics()
    {
LSDDebugParamsConfig::GroupDescription<LSDDebugParamsConfig::DEFAULT, LSDDebugParamsConfig> Default("Default", "", 0, 0, true, &LSDDebugParamsConfig::groups);
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.plotStereoImages = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.plotStereoImages = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.plotStereoImages = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("plotStereoImages", "bool", 0, "Plot Searched Stereo Lines, and color-coded stereo-results. Nice Visualization of what's going on, however drastically decreases mapping speed.", "", &LSDDebugParamsConfig::plotStereoImages)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("plotStereoImages", "bool", 0, "Plot Searched Stereo Lines, and color-coded stereo-results. Nice Visualization of what's going on, however drastically decreases mapping speed.", "", &LSDDebugParamsConfig::plotStereoImages)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.plotTracking = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.plotTracking = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.plotTracking = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("plotTracking", "bool", 0, "Plot final tracking residual. Nice Visualization of what's going on, however drastically decreases tracking speed.", "", &LSDDebugParamsConfig::plotTracking)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("plotTracking", "bool", 0, "Plot final tracking residual. Nice Visualization of what's going on, however drastically decreases tracking speed.", "", &LSDDebugParamsConfig::plotTracking)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.freeDebugParam1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.freeDebugParam1 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.freeDebugParam1 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam1", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam1", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.freeDebugParam2 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.freeDebugParam2 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.freeDebugParam2 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam2", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam2)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam2", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam2)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.freeDebugParam3 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.freeDebugParam3 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.freeDebugParam3 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam3", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam3)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam3", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam3)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.freeDebugParam4 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.freeDebugParam4 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.freeDebugParam4 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam4", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam4)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam4", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam4)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.freeDebugParam5 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.freeDebugParam5 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.freeDebugParam5 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam5", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam5)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<double>("freeDebugParam5", "double", 0, "free parameter to be used for rapid prototyping", "", &LSDDebugParamsConfig::freeDebugParam5)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.plotTrackingIterationInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.plotTrackingIterationInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.plotTrackingIterationInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("plotTrackingIterationInfo", "bool", 0, "only use if you know what you are doing!", "", &LSDDebugParamsConfig::plotTrackingIterationInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("plotTrackingIterationInfo", "bool", 0, "only use if you know what you are doing!", "", &LSDDebugParamsConfig::plotTrackingIterationInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printPropagationStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printPropagationStatistics = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printPropagationStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printPropagationStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printPropagationStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printPropagationStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printPropagationStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printFillHolesStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printFillHolesStatistics = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printFillHolesStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printFillHolesStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printFillHolesStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printFillHolesStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printFillHolesStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printObserveStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printObserveStatistics = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printObserveStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printObserveStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printObserveStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printObserveStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printObserveStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printObservePurgeStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printObservePurgeStatistics = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printObservePurgeStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printObservePurgeStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printObservePurgeStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printObservePurgeStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printObservePurgeStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printRegularizeStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printRegularizeStatistics = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printRegularizeStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printRegularizeStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printRegularizeStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printRegularizeStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printRegularizeStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printLineStereoStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printLineStereoStatistics = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printLineStereoStatistics = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printLineStereoStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printLineStereoStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printLineStereoStatistics", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printLineStereoStatistics)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printLineStereoFails = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printLineStereoFails = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printLineStereoFails = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printLineStereoFails", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printLineStereoFails)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printLineStereoFails", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printLineStereoFails)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printFrameBuildDebugInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printFrameBuildDebugInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printFrameBuildDebugInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printFrameBuildDebugInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printFrameBuildDebugInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printFrameBuildDebugInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printFrameBuildDebugInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printMemoryDebugInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printMemoryDebugInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printMemoryDebugInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printMemoryDebugInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printMemoryDebugInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printMemoryDebugInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printMemoryDebugInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printTrackingIterationInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printTrackingIterationInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printTrackingIterationInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printTrackingIterationInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printTrackingIterationInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printTrackingIterationInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printTrackingIterationInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printThreadingInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printThreadingInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printThreadingInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printThreadingInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printThreadingInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printThreadingInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printThreadingInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printMappingTiming = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printMappingTiming = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printMappingTiming = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printMappingTiming", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printMappingTiming)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printMappingTiming", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printMappingTiming)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printOverallTiming = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printOverallTiming = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printOverallTiming = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printOverallTiming", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printOverallTiming)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printOverallTiming", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printOverallTiming)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printKeyframeSelectionInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printKeyframeSelectionInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printKeyframeSelectionInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printKeyframeSelectionInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printKeyframeSelectionInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printKeyframeSelectionInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printKeyframeSelectionInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printConstraintSearchInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printConstraintSearchInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printConstraintSearchInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printConstraintSearchInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printConstraintSearchInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printConstraintSearchInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printConstraintSearchInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printOptimizationInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printOptimizationInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printOptimizationInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printOptimizationInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printOptimizationInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printOptimizationInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printOptimizationInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.printRelocalizationInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.printRelocalizationInfo = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.printRelocalizationInfo = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printRelocalizationInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printRelocalizationInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("printRelocalizationInfo", "bool", 0, "print lots of debug information", "", &LSDDebugParamsConfig::printRelocalizationInfo)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.continuousPCOutput = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.continuousPCOutput = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.continuousPCOutput = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("continuousPCOutput", "bool", 0, "Publish Current Keyframe's Pointcloud after each update, to be seen in the viewer. Nice Visualization, however bad for performance and bandwith. ", "", &LSDDebugParamsConfig::continuousPCOutput)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("continuousPCOutput", "bool", 0, "Publish Current Keyframe's Pointcloud after each update, to be seen in the viewer. Nice Visualization, however bad for performance and bandwith. ", "", &LSDDebugParamsConfig::continuousPCOutput)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.saveKeyframes = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.saveKeyframes = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.saveKeyframes = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("saveKeyframes", "bool", 0, "Save lots of pictures. Only use if you know what you are doing.", "", &LSDDebugParamsConfig::saveKeyframes)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("saveKeyframes", "bool", 0, "Save lots of pictures. Only use if you know what you are doing.", "", &LSDDebugParamsConfig::saveKeyframes)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.saveAllTracked = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.saveAllTracked = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.saveAllTracked = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("saveAllTracked", "bool", 0, "Save lots of pictures. Only use if you know what you are doing.", "", &LSDDebugParamsConfig::saveAllTracked)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("saveAllTracked", "bool", 0, "Save lots of pictures. Only use if you know what you are doing.", "", &LSDDebugParamsConfig::saveAllTracked)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.saveLoopClosureImages = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.saveLoopClosureImages = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.saveLoopClosureImages = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("saveLoopClosureImages", "bool", 0, "Save lots of pictures. Only use if you know what you are doing.", "", &LSDDebugParamsConfig::saveLoopClosureImages)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("saveLoopClosureImages", "bool", 0, "Save lots of pictures. Only use if you know what you are doing.", "", &LSDDebugParamsConfig::saveLoopClosureImages)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.saveAllTrackingStages = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.saveAllTrackingStages = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.saveAllTrackingStages = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("saveAllTrackingStages", "bool", 0, "Save lots of pictures. Only use if you know what you are doing.", "", &LSDDebugParamsConfig::saveAllTrackingStages)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LSDDebugParamsConfig::AbstractParamDescriptionConstPtr(new LSDDebugParamsConfig::ParamDescription<bool>("saveAllTrackingStages", "bool", 0, "Save lots of pictures. Only use if you know what you are doing.", "", &LSDDebugParamsConfig::saveAllTrackingStages)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(LSDDebugParamsConfig::AbstractGroupDescriptionConstPtr(new LSDDebugParamsConfig::GroupDescription<LSDDebugParamsConfig::DEFAULT, LSDDebugParamsConfig>(Default)));
//#line 366 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<LSDDebugParamsConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<LSDDebugParamsConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<LSDDebugParamsConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    LSDDebugParamsConfig __max__;
    LSDDebugParamsConfig __min__;
    LSDDebugParamsConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const LSDDebugParamsConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static LSDDebugParamsConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &LSDDebugParamsConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const LSDDebugParamsConfig &LSDDebugParamsConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const LSDDebugParamsConfig &LSDDebugParamsConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const LSDDebugParamsConfig &LSDDebugParamsConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<LSDDebugParamsConfig::AbstractParamDescriptionConstPtr> &LSDDebugParamsConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<LSDDebugParamsConfig::AbstractGroupDescriptionConstPtr> &LSDDebugParamsConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const LSDDebugParamsConfigStatics *LSDDebugParamsConfig::__get_statics__()
  {
    const static LSDDebugParamsConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = LSDDebugParamsConfigStatics::get_instance();

    return statics;
  }


}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __LSDDEBUGPARAMSRECONFIGURATOR_H__
